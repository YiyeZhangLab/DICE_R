% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DecoderRNN.R
\name{DecoderRNN}
\alias{DecoderRNN}
\title{DecoderRNN Neural Network Module}
\usage{
DecoderRNN(input_size, nhidden, nlayers, dropout)
}
\description{
An RNN-based decoder module using Long Short-Term Memory (LSTM) architecture, implemented with the \code{torch} package.
This module is designed to process sequential data during the decoding phase in tasks like sequence-to-sequence modeling.
}
\section{Usage}{

\preformatted{
DecoderRNN <- nn_module(
  "DecoderRNN",

  initialize = function(input_size, nhidden, nlayers, dropout) {
    ...
  },

  forward = function(x, h) {
    ...
  }
)
}
}

\section{Methods}{

\describe{
\item{\code{initialize(input_size, nhidden, nlayers, dropout)}}{
Initializes the DecoderRNN module.

\if{html}{\out{<div class="sourceCode">}}\preformatted{\\itemize\{
  \\item\{\code{input_size}: A numeric value representing the number of features in the input data.\}
  \\item\{\code{nhidden}: A numeric value representing the number of hidden units in each LSTM layer.\}
  \\item\{\code{nlayers}: A numeric value indicating the number of LSTM layers.\}
  \\item\{\code{dropout}: A numeric value between 0 and 1 indicating the dropout probability to be applied between LSTM layers.\}
\}
}\if{html}{\out{</div>}}

}

\item{\code{forward(x, h)}}{
Executes the forward pass of the DecoderRNN module.

\if{html}{\out{<div class="sourceCode">}}\preformatted{\\itemize\{
  \\item\{\code{x}: A tensor of shape (batch_size, sequence_length, input_size) representing the input data.\}
  \\item\{\code{h}: A list containing the hidden state (\code{hn}) and cell state (\code{cn}) from the LSTM, typically passed from the encoder or previous decoder step.\}
\}

\\value\{
  A tensor representing the output sequence, flipped along the sequence dimension.
\}
}\if{html}{\out{</div>}}

}
}
}

