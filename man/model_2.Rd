% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_2.R
\name{model_2}
\alias{model_2}
\title{model_2 Neural Network Module}
\usage{
model_2(
  input_size,
  nhidden,
  nlayers,
  dropout,
  n_clusters,
  n_dummy_demov_fea,
  para_cuda
)
}
\description{
A neural network module implementing a multi-functional model with encoder-decoder architecture using the \code{torch} package.
The model supports autoencoding, representation learning, classification, and logistic regression with optional demographic feature input.
}
\section{Usage}{

\preformatted{
model_2 <- nn_module(
  "model_2",

  initialize = function(input_size, nhidden, nlayers, dropout, n_clusters, n_dummy_demov_fea, para_cuda) {
    ...
  },

  init_weights = function() {
    ...
  },

  forward = function(x, function_name, demov = NULL, mask_BoolTensor = NULL) {
    ...
  }
)
}
}

\section{Methods}{

\describe{
\item{\code{initialize(input_size, nhidden, nlayers, dropout, n_clusters, n_dummy_demov_fea, para_cuda)}}{
Initializes the model_2 module.

\if{html}{\out{<div class="sourceCode">}}\preformatted{\\itemize\{
  \\item\{\code{input_size}: A numeric value representing the number of features in the input data.\}
  \\item\{\code{nhidden}: A numeric value representing the number of hidden units in each LSTM layer.\}
  \\item\{\code{nlayers}: A numeric value indicating the number of LSTM layers.\}
  \\item\{\code{dropout}: A numeric value between 0 and 1 indicating the dropout probability to be applied between LSTM layers.\}
  \\item\{\code{n_clusters}: A numeric value representing the number of clusters (or classes) for the classifier.\}
  \\item\{\code{n_dummy_demov_fea}: A numeric value indicating the number of dummy demographic features used in the logistic regression.\}
  \\item\{\code{para_cuda}: A logical value indicating whether CUDA (GPU acceleration) should be used.\}
\}
}\if{html}{\out{</div>}}

}

\item{\code{init_weights()}}{
Initializes the weights of the linear layers in the model with uniform random values and biases set to zero.
}

\item{\code{forward(x, function_name, demov = NULL, mask_BoolTensor = NULL)}}{
Executes the forward pass of the model based on the specified function.

\if{html}{\out{<div class="sourceCode">}}\preformatted{\\itemize\{
  \\item\{\code{x}: A tensor of shape (batch_size, sequence_length, input_size) representing the input data.\}
  \\item\{\code{function_name}: A character string indicating the type of operation to perform, one of \code{"autoencoder"}, \code{"get_representation"}, \code{"classifier"}, or \code{"outcome_logistic_regression"}.\}
  \\item\{\code{demov}: (Optional) A tensor representing demographic feature data, used in logistic regression. Default is \code{NULL}.\}
  \\item\{\code{mask_BoolTensor}: (Optional) A boolean tensor used to mask certain values during the logistic regression operation. Default is \code{NULL}.\}
\}

\\value\{
  A list containing outputs depending on the chosen \code{function_name}:
  \\itemize\{
    \\item\{\code{"autoencoder"}: A list with encoded and decoded tensors.\}
    \\item\{\code{"get_representation"}: A tensor representing the encoded input.\}
    \\item\{\code{"classifier"}: A list with the encoded tensor and class probabilities.\}
    \\item\{\code{"outcome_logistic_regression"}: A list containing the encoded tensor, decoded tensor, unactivated class scores, and logistic regression output.\}
  \}
\}
}\if{html}{\out{</div>}}

}
}
}

